{"version":3,"sources":["components/FlightType.js","components/Flight.js","components/Loader.js","components/FlightsContainer.js","components/Search.js","helpers/fetch.js","helpers/flight.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["FlightType","render","type","_this","props","react_default","a","createElement","Button","Group","className","positive","onClick","onTypeChange","Or","text","React","Component","Flight","isDelayed","flight","delayTime","time","renderAircraft","labelOptions","style","marginLeft","aircraft","toLowerCase","includes","color","Label","Object","assign","basic","renderTime","timeText","slice","segmentOptions","attached","Fragment","Segment","Grid","Row","Column","width","Header_Header","as","Content","city","Subheader","List","numbers","map","number","Item","key","concat","term","gate","status","Message","warning","Icon","name","Loader","Placeholder","Paragraph","Line","FlightContainer","_this$props","flights","loading","components_Loader","length","components_Flight","id","Search","state","searchTerm","onFormSubmit","onSubmit","onInputChange","e","_ref","value","setState","clearInput","_callee","regenerator_default","wrap","_context","prev","next","stop","Form","Input","onChange","onBlur","fluid","placeholder","icon","link","get","asyncToGenerator","mark","url","response","fetch","sent","abrupt","json","t0","_x","apply","this","arguments","transformFlights","myMap","Map","result","sort","b","main_flight","forEach","item","i_id","co","code","flt","mar2","description","mar1","vip_status_rus","t_st","t_et","departTime","t_otpr","aircraft_type_name","gate_id","set","push","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","done","err","return","Header","Menu","inverted","header","App","btnLoading","startDate","Date","now","endDate","prepareUrl","from","toISOString","to","search","encodeURI","dateEnd","dateStart","flightDirection","getFlights","items","loadMoreClick","_callee2","_context2","prevState","_callee3","_context3","onSearch","_callee4","_context4","componentDidMount","_callee5","_context5","_this$state","components_Header","Container","computer","mobile","components_Search","textAlign","components_FlightType","FlightsContainer","content","disabled","primary","Boolean","window","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4SA6BeA,6MAxBbC,OAAS,WAAM,IACLC,EAASC,EAAKC,MAAdF,KACR,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAOC,MAAR,CAAcC,UAAU,eACtBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEG,SAAmB,cAATT,EACVU,QAAS,WACPT,EAAKC,MAAMS,aAAa,eAH5B,kCAQAR,EAAAC,EAAAC,cAACC,EAAA,EAAOM,GAAR,CAAWC,KAAK,MAChBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEG,SAAmB,YAATT,EACVU,QAAS,WACPT,EAAKC,MAAMS,aAAa,aAH5B,uEAfiBG,IAAMC,wEC8FhBC,6MA5FbC,UAAY,WAAM,IACRC,EAAWjB,EAAKC,MAAhBgB,OACR,SAAIA,EAAOC,WAAaD,EAAOC,UAAYD,EAAOE,SAMpDC,eAAiB,WAAM,IACbH,EAAWjB,EAAKC,MAAhBgB,OACR,IAAKA,EAAQ,MAAO,GACpB,IAAMI,EAAe,CACnBC,MAAO,CAAEC,WAAY,IAKvB,OAHIN,EAAOO,SAASC,cAAcC,SAAS,SAASD,iBAClDJ,EAAaM,MAAQ,OAGrBzB,EAAAC,EAAAC,cAACwB,EAAA,EAADC,OAAAC,OAAA,CAAOC,OAAK,GAAKV,GACdJ,EAAOO,aAMdQ,WAAa,WAAM,IACTf,EAAWjB,EAAKC,MAAhBgB,OACR,OAAKjB,EAAKgB,YAIRd,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,WAAMa,EAAOgB,UACb/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,OACbU,EAAOC,UAAUgB,MAAM,GAAI,MAPzBjB,EAAOgB,YAalBnC,OAAS,WAAM,IACLmB,EAAWjB,EAAKC,MAAhBgB,OACR,GAAKA,EAAL,CACA,IAAMkB,EAAiB,GAIvB,OAHInC,EAAKgB,cACPmB,EAAeC,SAAW,OAG1BlC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAYH,EACXjC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAKC,IAAN,KACEtC,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClBxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,GAAG,MACT1C,EAAAC,EAAAC,cAACuC,EAAA,EAAOE,QAAR,KACG5B,EAAO6B,MAEV5C,EAAAC,EAAAC,cAACuC,EAAA,EAAOI,UAAR,KACG/C,EAAKgC,eAGThC,EAAKoB,kBAERlB,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClBxC,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACG/B,EAAOgC,QAAQC,IAAI,SAAAC,GAAM,OAAIjD,EAAAC,EAAAC,cAAC4C,EAAA,EAAKI,KAAN,CAAWC,IAAKF,GAASA,OAG3DjD,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAApB,GAAAY,OACMrC,EAAOsC,KADb,KAAAD,OACqBrC,EAAOuC,OAE5BtD,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClBxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,GAAG,MACR3B,EAAOwC,YAOhBzD,EAAKgB,aACLd,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAASC,SAAO,EAACvB,SAAS,UACxBlC,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAMC,KAAK,YADb,8GApFWhD,IAAMC,oBC4BZgD,EA5BA,WACb,OACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,KACE7D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYC,UAAb,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,OAEF/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYC,UAAb,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,OAEF/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYC,UAAb,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,MACA/D,EAAAC,EAAAC,cAAC2D,EAAA,EAAYE,KAAb,SCVOC,6MAVbpE,OAAS,WAAM,IAAAqE,EACgBnE,EAAKC,MAA1BmE,EADKD,EACLC,QACR,OAFaD,EACIE,QACGnE,EAAAC,EAAAC,cAACkE,EAAD,MACfF,GAAYA,EAAQG,OAGlBH,EAAQlB,IAAI,SAAAjC,GAAM,OAAIf,EAAAC,EAAAC,cAACoE,EAAD,CAAQnB,IAAKpC,EAAOwD,GAAIxD,OAAQA,MAFpD,8HALiBJ,IAAMC,oBCwCrB4D,6MAvCbC,MAAQ,CACNC,WAAY,MAGdC,aAAe,WACb7E,EAAKC,MAAM6E,SAAS9E,EAAK2E,MAAMC,eAGjCG,cAAgB,SAACC,EAADC,GAAkB,IAAZC,EAAYD,EAAZC,MACpBlF,EAAKmF,SAAS,CAAEP,WAAYM,OAG9BE,gCAAa,SAAAC,IAAA,OAAAC,EAAAnF,EAAAoF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACL1F,EAAKmF,SAAS,CAAEP,WAAY,KADvB,OAEX5E,EAAK6E,eAFM,wBAAAW,EAAAG,SAAAN,QAKbvF,OAAS,WAAM,IACL8E,EAAe5E,EAAK2E,MAApBC,WACR,OACE1E,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAMd,SAAU9E,EAAK6E,cACnB3E,EAAAC,EAAAC,cAACwF,EAAA,EAAKC,MAAN,CACEC,SAAU9F,EAAK+E,cACfgB,OAAQ/F,EAAK6E,aACbK,MAAON,EACPoB,OAAK,EACLC,YAAY,oPACZC,KAAMtB,EAAa,CACjBf,KAAM,QACNsC,MAAM,EACN1F,QAAST,EAAKoF,YACZ,sCAjCOvE,IAAMC,oBCHdsF,EAAG,eAAAnB,EAAApD,OAAAwE,EAAA,EAAAxE,CAAAyD,EAAAnF,EAAAmG,KAAG,SAAAjB,EAAOkB,GAAP,IAAAC,EAAA,OAAAlB,EAAAnF,EAAAoF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQe,MAAM,uCAAyCF,GAFvD,cAETC,EAFShB,EAAAkB,KAAAlB,EAAAmB,OAAA,SAGRH,EAASI,QAHD,cAAApB,EAAAC,KAAA,EAAAD,EAAAqB,GAAArB,EAAA,SAAAA,EAAAmB,OAAA,SAAAnB,EAAAqB,IAAA,yBAAArB,EAAAG,SAAAN,EAAA,iBAAH,gBAAAyB,GAAA,OAAA7B,EAAA8B,MAAAC,KAAAC,YAAA,GCAHC,EAAmB,SAAC9C,EAASrE,GACxC,IAAMoH,EAAQ,IAAIC,IACZC,EAAS,GACfjD,EAAQkD,KAAK,SAACnH,EAAGoH,GACf,OAAIpH,EAAEqH,YAAcD,EAAEC,YACb,EAELrH,EAAEqH,YAAcD,EAAEC,aACZ,EAEH,IAGTpD,EAAQqD,QAAQ,SAAAxG,GACd,GAA2B,KAAvBA,EAAOuG,YAAoB,CAC7B,IAAME,EAAO,GACbA,EAAKjD,GAAKxD,EAAO0G,KACjBD,EAAKzE,QAAU,IAAAK,OAAIrC,EAAO2G,GAAGC,KAAd,KAAAvE,OAAsBrC,EAAO6G,MAC5CJ,EAAK5E,KAAgB,cAAT/C,EAAuBkB,EAAO8G,KAAKC,YAAc/G,EAAOgH,KAAKD,YACzEN,EAAKjE,OAASxC,EAAOiH,eACrBR,EAAKvG,KAAOF,EAAOkH,KACnBT,EAAKzF,UAAqB,cAATlC,EAAuB,qEAAgB,oDAAxC,IAAAuD,OAA0DrC,EAAOkH,KAAKjG,MAAM,GAAI,KAChGwF,EAAKxG,UAAYD,EAAOmH,KACxBV,EAAKW,WAAapH,EAAOqH,OACzBZ,EAAKlG,SAAWP,EAAOsH,mBACvBb,EAAKnE,KAAOtC,EAAOsC,KACnBmE,EAAKlE,KAAOvC,EAAOuH,QAEnBrB,EAAMsB,IAAIxH,EAAO0G,KAAMD,OAClB,CACL,IAAMA,EAAOP,EAAMf,IAAInF,EAAOuG,aAC9BE,EAAKzE,QAAQyF,KAAb,GAAApF,OAAqBrC,EAAO2G,GAAGC,KAA/B,KAAAvE,OAAuCrC,EAAO6G,MAC9CX,EAAMsB,IAAIxH,EAAOuG,YAAaE,MAhCe,IAAAiB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAmCjD,QAAAC,EAAAC,EAAkB7B,EAAM8B,SAAxBC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAtD,QAAA0D,MAAAT,GAAA,EAAkC,KAAzBzD,EAAyB6D,EAAA7D,MAChCmC,EAAOqB,KAAKxD,IApCmC,MAAAmE,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAK,EAAAM,QAAAN,EAAAM,SAAA,WAAAV,EAAA,MAAAC,GA2CjD,OALAxB,EAAOC,KAAK,SAACnH,EAAGoH,GACd,OAAIpH,EAAEgB,KAAOoG,EAAEpG,MAAc,EACzBhB,EAAEgB,KAAOoG,EAAEpG,KAAa,EACrB,IAEFkG,YC3BMkC,6MAXbzJ,OAAS,WACP,OACEI,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAM7H,MAAM,QAAQS,UAAQ,EAAC7B,UAAU,SAASkJ,UAAQ,GACtDvJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAKpG,KAAN,CAAWsG,QAAM,GAAjB,qGALa5I,aC2IN6I,6MAlIbhF,MAAQ,CACN5E,KAAM,YACN6E,WAAY,GACZR,QAAS,GACTC,SAAS,EACTuF,YAAY,EACZC,UAAWC,KAAKC,MAAQ,KACxBC,QAASF,KAAKC,MAAQ,SAGxBE,WAAa,SAACrF,GACZ,IACQ7E,EAASC,EAAK2E,MAAd5E,KACJmK,EAAO,IAAIJ,KAAK9J,EAAK2E,MAAMkF,WAAWM,cAAcjI,MAAM,EAAG,IAAM,KACnEkI,EAAK,IAAIN,KAAK9J,EAAK2E,MAAMqF,SAASG,cAAcjI,MAAM,EAAG,IAAM,KAC/DmI,EAAS,GACTzF,IACFyF,EAAS,UAAYC,UAAU1F,GAC/BsF,EAAOA,EAAKhI,MAAM,GAAI,GAAK,QAC3BkI,EAAKA,EAAGlI,MAAM,GAAI,GAAK,SAEzB,IAAMqI,EAAO,WAAAjH,OAAc8G,GACrBI,EAAS,aAAAlH,OAAgB4G,GACzBO,EAAe,aAAAnH,OAAgBvD,GACrC,SAAAuD,OAbgB,yCAahB,KAAAA,OAAqBmH,EAArB,KAAAnH,OAAwCkH,EAAxC,KAAAlH,OAAqDiH,EAArD,oCAAAjH,OAA+F+G,MAGjGK,iDAAa,SAAArF,EAAOkB,GAAP,IAAAxG,EAAAyG,EAAApC,EAAA,OAAAkB,EAAAnF,EAAAoF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACH3F,EAASC,EAAK2E,MAAd5E,KADGyF,EAAAE,KAAA,EAEYU,EAAIG,GAFhB,WAELC,EAFKhB,EAAAkB,OAGOF,EAASmE,MAHhB,CAAAnF,EAAAE,KAAA,eAAAF,EAAAmB,OAAA,wBAILvC,EAAU8C,EAAiBV,EAASmE,MAAO5K,GAJtCyF,EAAAmB,OAAA,SAKJvC,GALI,wBAAAoB,EAAAG,SAAAN,8DAQbuF,mCAAgB,SAAAC,IAAA,IAAAtE,EAAAnC,EAAA,OAAAkB,EAAAnF,EAAAoF,KAAA,SAAAuF,GAAA,cAAAA,EAAArF,KAAAqF,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EACR1F,EAAKmF,SAAS,SAAC4F,GACnB,MAAO,CACLnB,YAAY,EACZC,UAAWkB,EAAUlB,UAAY,KACjCG,QAASe,EAAUf,QAAU,QALnB,cAQRzD,EAAMvG,EAAKiK,aARHa,EAAApF,KAAA,EASQ1F,EAAK0K,WAAWnE,GATxB,OASRnC,EATQ0G,EAAApE,KAUd1G,EAAKmF,SAAS,SAAC4F,GACb,MAAO,CACLnB,YAAY,EACZxF,QAAS2G,EAAU3G,QAAQd,OAAOc,MAbxB,wBAAA0G,EAAAnF,SAAAkF,QAkBhBnK,mDAAe,SAAAsK,EAAOjL,GAAP,IAAAwG,EAAAnC,EAAA,OAAAkB,EAAAnF,EAAAoF,KAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,cAAAuF,EAAAvF,KAAA,EACP1F,EAAKmF,SAAS,CAClBpF,OACA8J,UAAWC,KAAKC,MAAQ,KACxBC,QAASF,KAAKC,MAAQ,MACtB1F,SAAS,EACTO,WAAY,KAND,cAQP2B,EAAMvG,EAAKiK,aARJgB,EAAAvF,KAAA,EASS1F,EAAK0K,WAAWnE,GATzB,OASPnC,EATO6G,EAAAvE,KAUb1G,EAAKmF,SAAS,CACZf,UACAC,SAAS,IAZE,wBAAA4G,EAAAtF,SAAAqF,8DAgBfE,+CAAW,SAAAC,EAAOvG,GAAP,IAAA2B,EAAAnC,EAAA,OAAAkB,EAAAnF,EAAAoF,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,cAAA0F,EAAA1F,KAAA,EACH1F,EAAKmF,SAAS,CAAEd,SAAS,IADtB,cAEHkC,EAAMvG,EAAKiK,WAAWrF,GAFnBwG,EAAA1F,KAAA,EAGa1F,EAAK0K,WAAWnE,GAH7B,cAGHnC,EAHGgH,EAAA1E,KAAA0E,EAAA1F,KAAA,EAIH1F,EAAKmF,SAAS,CAClBf,UACAC,SAAS,EACTO,eAPO,wBAAAwG,EAAAzF,SAAAwF,8DAWXE,uCAAoB,SAAAC,IAAA,IAAA/E,EAAAnC,EAAA,OAAAkB,EAAAnF,EAAAoF,KAAA,SAAAgG,GAAA,cAAAA,EAAA9F,KAAA8F,EAAA7F,MAAA,cACZa,EAAMvG,EAAKiK,aADCsB,EAAA7F,KAAA,EAEI1F,EAAK0K,WAAWnE,GAFpB,OAEZnC,EAFYmH,EAAA7E,KAGlB1G,EAAKmF,SAAS,CACZf,UACAC,SAAS,IALO,wBAAAkH,EAAA5F,SAAA2F,QASpBxL,OAAS,WAAM,IAAA0L,EAC8CxL,EAAK2E,MAAxD5E,EADKyL,EACLzL,KAAMqE,EADDoH,EACCpH,QAASC,EADVmH,EACUnH,QAASuF,EADnB4B,EACmB5B,WAAYhF,EAD/B4G,EAC+B5G,WAC5C,OACE1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAACqL,EAAD,MACAvL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,KACExL,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAACmC,EAAA,EAAKC,IAAN,CAAUjC,UAAU,QAClBL,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAakJ,SAAU,EAAGC,OAAQ,KAClC1L,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAakJ,SAAU,EAAGC,OAAQ,IAChC1L,EAAAC,EAAAC,cAACyL,EAAD,CAAQ/G,SAAU9E,EAAKkL,aAG3BhL,EAAAC,EAAAC,cAACmC,EAAA,EAAKC,IAAN,KACEtC,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAakJ,SAAU,EAAGC,OAAQ,GAAIE,UAAU,UAC9C5L,EAAAC,EAAAC,cAAC2L,EAAD,CAAYhM,KAAMA,EAAMW,aAAc,SAAAX,GAAI,OAAIC,EAAKU,aAAaX,OAElEG,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAakJ,SAAU,EAAGC,OAAQ,IAChC1L,EAAAC,EAAAC,cAAC4L,EAAD,CAAkBjM,KAAMA,EAAMqE,QAASA,EAASC,QAASA,MAG7DnE,EAAAC,EAAAC,cAACmC,EAAA,EAAKC,IAAN,KACEtC,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAakJ,SAAU,EAAGC,OAAQ,KAClC1L,EAAAC,EAAAC,cAACmC,EAAA,EAAKE,OAAN,CAAakJ,SAAU,EAAGC,OAAQ,GAAIE,UAAU,YAC3ClH,GAAcP,IAAYD,IAC3BlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4L,QAAQ,4EACRC,SAAU7H,GAAWuF,EACrBuC,SAAO,EACP1L,QAAS,kBAAMT,EAAK4K,iBACpBvG,QAASuF,uCAzHX/I,IAAMC,WCEJsL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAAS3M,OACPI,EAAAC,EAAAC,cAACsM,EAAD,MACAC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c0de7f52.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nclass FlightType extends React.Component {\n\n  render = () => {\n    const { type } = this.props;\n    return (\n      <Button.Group className='flight-type'>\n        <Button\n          positive={type === 'departure'}\n          onClick={() => {\n            this.props.onTypeChange('departure')\n          }}\n        >\n          Вылет\n        </Button>\n        <Button.Or text='|' />\n        <Button\n          positive={type === 'arrival'}\n          onClick={() => {\n            this.props.onTypeChange('arrival')\n          }}\n        >Прилет</Button>\n      </Button.Group>\n    );\n  }\n}\n\nexport default FlightType;","import React from 'react';\nimport { Segment, Grid, Header, List, Message, Icon, Label } from 'semantic-ui-react';\n\nclass Flight extends React.Component {\n\n  isDelayed = () => {\n    const { flight } = this.props;\n    if (flight.delayTime && flight.delayTime > flight.time) {\n      return true;\n    }\n    return false;\n  };\n\n  renderAircraft = () => {\n    const { flight } = this.props;\n    if (!flight) return '';\n    const labelOptions = {\n      style: { marginLeft: 0 }\n    };\n    if (flight.aircraft.toLowerCase().includes('Sukhoi'.toLowerCase())) {\n      labelOptions.color = 'red';\n    }\n    return (\n      <Label basic {...labelOptions}>\n        {flight.aircraft}\n      </Label>\n    );\n\n  };\n\n  renderTime = () => {\n    const { flight } = this.props;\n    if (!this.isDelayed()) {\n      return flight.timeText;\n    }\n    return (\n      <p>\n        <del>{flight.timeText}</del>\n        <br />\n        <span className='red'>\n          {flight.delayTime.slice(11, 16)}\n        </span>\n      </p>\n    );\n  };\n\n  render = () => {\n    const { flight } = this.props;\n    if (!flight) return;\n    const segmentOptions = {};\n    if (this.isDelayed()) {\n      segmentOptions.attached = 'top';\n    }\n    return (\n      <>\n        <Segment {...segmentOptions}>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <Header as='h2'>\n                  <Header.Content>\n                    {flight.city}\n                  </Header.Content>\n                  <Header.Subheader>\n                    {this.renderTime()}\n                  </Header.Subheader>\n                </Header>\n                {this.renderAircraft()}\n              </Grid.Column>\n              <Grid.Column width={2}>\n                <List>\n                  {flight.numbers.map(number => <List.Item key={number}>{number}</List.Item>)}\n                </List>\n              </Grid.Column>\n              <Grid.Column width={2}>\n                {`${flight.term} ${flight.gate}`}\n              </Grid.Column>\n              <Grid.Column width={4}>\n                <Header as='h4'>\n                  {flight.status}\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        {\n          this.isDelayed() &&\n          <Message warning attached='bottom'>\n            <Icon name='warning' />\n            Рейс задержан!\n          </Message>\n        }\n      </>\n    );\n  }\n}\n\nexport default Flight;","import React from 'react';\nimport { Placeholder } from 'semantic-ui-react';\n\nconst Loader = () => {\n  return (\n    <Placeholder>\n      <Placeholder.Paragraph>\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n      </Placeholder.Paragraph>\n      <Placeholder.Paragraph>\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n      </Placeholder.Paragraph>\n      <Placeholder.Paragraph>\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n      </Placeholder.Paragraph>\n    </Placeholder>\n  );\n};\n\nexport default Loader;","import React from 'react';\nimport Flight from './Flight';\nimport Loader from './Loader';\n\nclass FlightContainer extends React.Component {\n  render = () => {\n    const { flights, loading } = this.props;\n    if (loading) return <Loader />;\n    if (!flights || !flights.length) {\n      return 'Ничего не найдено!'\n    }\n    return flights.map(flight => <Flight key={flight.id} flight={flight} />);\n  };\n}\n\nexport default FlightContainer;","import React from 'react';\nimport { Form } from 'semantic-ui-react';\n\nclass Search extends React.Component {\n\n  state = {\n    searchTerm: ''\n  };\n\n  onFormSubmit = () => {\n    this.props.onSubmit(this.state.searchTerm);\n  };\n\n  onInputChange = (e, { value }) => {\n    this.setState({ searchTerm: value });\n  };\n\n  clearInput = async () => {\n    await this.setState({ searchTerm: '' });\n    this.onFormSubmit();\n  };\n\n  render = () => {\n    const { searchTerm } = this.state;\n    return (\n      <Form onSubmit={this.onFormSubmit}>\n        <Form.Input\n          onChange={this.onInputChange}\n          onBlur={this.onFormSubmit}\n          value={searchTerm}\n          fluid\n          placeholder='Поиск по номеру рейса, городу или авиакомпании'\n          icon={searchTerm ? {\n            name: 'times',\n            link: true,\n            onClick: this.clearInput\n          } : null\n          }\n        />\n      </Form>\n    );\n  };\n}\n\nexport default Search;","export const get = async (url) => {\n  try {\n    const response = await fetch('https://cors-anywhere.herokuapp.com/' + url);\n    return response.json();\n  } catch (e) {\n    return e;\n  }\n};","export const transformFlights = (flights, type) => {\n  const myMap = new Map();\n  const result = [];\n  flights.sort((a, b) => {\n    if (a.main_flight > b.main_flight) {\n      return 1;\n    }\n    if (a.main_flight < b.main_flight) {\n      return -1;\n    }\n    return 0;\n  });\n\n  flights.forEach(flight => {\n    if (flight.main_flight === '') {\n      const item = {};\n      item.id = flight.i_id;\n      item.numbers = [`${flight.co.code} ${flight.flt}`];\n      item.city = type === 'departure' ? flight.mar2.description : flight.mar1.description;\n      item.status = flight.vip_status_rus;\n      item.time = flight.t_st;\n      item.timeText = (type === 'departure' ? 'Отправление' : 'Прибытие') + ` ${flight.t_st.slice(11, 16)}`;\n      item.delayTime = flight.t_et;\n      item.departTime = flight.t_otpr;\n      item.aircraft = flight.aircraft_type_name;\n      item.term = flight.term;\n      item.gate = flight.gate_id;\n\n      myMap.set(flight.i_id, item);\n    } else {\n      const item = myMap.get(flight.main_flight);\n      item.numbers.push(`${flight.co.code} ${flight.flt}`);\n      myMap.set(flight.main_flight, item);\n    }\n  });\n  for (let value of myMap.values()) {\n    result.push(value);\n  }\n  result.sort((a, b) => {\n    if (a.time < b.time) return -1;\n    if (a.time > b.time) return 1;\n    return 0;\n  });\n  return result;\n};","import React, { Component } from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nclass Header extends Component {\n\n  render = () => {\n    return (\n      <Menu color='black' attached className='navbar' inverted>\n        <Menu.Item header>\n          Шереметьево\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport '../css/App.css';\nimport FlightType from './FlightType';\nimport FlightsContainer from './FlightsContainer';\nimport Search from './Search';\nimport { Container, Grid, Button } from 'semantic-ui-react';\nimport { get } from '../helpers/fetch';\nimport { transformFlights } from '../helpers/flight';\nimport Header from './Header';\n\nclass App extends React.Component {\n\n  state = {\n    type: 'departure',\n    searchTerm: '',\n    flights: [],\n    loading: true,\n    btnLoading: false,\n    startDate: Date.now() + 2 * 60 * 60 * 1000,\n    endDate: Date.now() + 3 * 60 * 60 * 1000\n  };\n\n  prepareUrl = (searchTerm) => {\n    const baseUrl = 'https://www.svo.aero/bitrix/timetable/';\n    const { type } = this.state;\n    let from = new Date(this.state.startDate).toISOString().slice(0, 14) + '00';\n    let to = new Date(this.state.endDate).toISOString().slice(0, 14) + '59';\n    let search = '';\n    if (searchTerm) {\n      search = 'search=' + encodeURI(searchTerm);\n      from = from.slice(0, -5) + '00:00';\n      to = to.slice(0, -5) + '23:59';\n    }\n    const dateEnd = `dateEnd=${to}`;\n    const dateStart = `dateStart=${from}`;\n    const flightDirection = `direction=${type}`;\n    return `${baseUrl}?${flightDirection}&${dateStart}&${dateEnd}&perPage=9999&page=0&&locale=ru&${search}`;\n  };\n\n  getFlights = async (url) => {\n    const { type } = this.state;\n    const response = await get(url);\n    if (!response || !response.items) return;\n    const flights = transformFlights(response.items, type);\n    return flights;\n  };\n\n  loadMoreClick = async () => {\n    await this.setState((prevState) => {\n      return {\n        btnLoading: true,\n        startDate: prevState.startDate + 2 * 60 * 60 * 1000,\n        endDate: prevState.endDate + 2 * 60 * 60 * 1000\n      };\n    });\n    const url = this.prepareUrl();\n    const flights = await this.getFlights(url);\n    this.setState((prevState) => {\n      return {\n        btnLoading: false,\n        flights: prevState.flights.concat(flights)\n      }\n    });\n  };\n\n  onTypeChange = async (type) => {\n    await this.setState({\n      type,\n      startDate: Date.now() + 2 * 60 * 60 * 1000,\n      endDate: Date.now() + 3 * 60 * 60 * 1000,\n      loading: true,\n      searchTerm: ''\n    });\n    const url = this.prepareUrl();\n    const flights = await this.getFlights(url);\n    this.setState({\n      flights,\n      loading: false\n    });\n  };\n\n  onSearch = async (searchTerm) => {\n    await this.setState({ loading: true });\n    const url = this.prepareUrl(searchTerm);\n    const flights = await this.getFlights(url);\n    await this.setState({\n      flights,\n      loading: false,\n      searchTerm\n    });\n  };\n\n  componentDidMount = async () => {\n    const url = this.prepareUrl();\n    const flights = await this.getFlights(url);\n    this.setState({\n      flights,\n      loading: false\n    });\n  };\n\n  render = () => {\n    const { type, flights, loading, btnLoading, searchTerm } = this.state;\n    return (\n      <>\n        <Header />\n        <Container>\n          <Grid>\n            <Grid.Row className='mb15'>\n              <Grid.Column computer={4} mobile={16} />\n              <Grid.Column computer={8} mobile={16}>\n                <Search onSubmit={this.onSearch} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column computer={4} mobile={16} textAlign='center'>\n                <FlightType type={type} onTypeChange={type => this.onTypeChange(type)} />\n              </Grid.Column>\n              <Grid.Column computer={8} mobile={16}>\n                <FlightsContainer type={type} flights={flights} loading={loading} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column computer={4} mobile={16} />\n              <Grid.Column computer={8} mobile={16} textAlign='center'>\n                {!(searchTerm || loading || !flights) &&\n                  <Button\n                    content='Загрузить еще'\n                    disabled={loading || btnLoading}\n                    primary\n                    onClick={() => this.loadMoreClick()}\n                    loading={btnLoading}\n                  />}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n// import { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}